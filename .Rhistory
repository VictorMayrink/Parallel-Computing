dados <- read_csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
summarise(dados,
media = mean(real, na.rm = TRUE))
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
summarise(dados,
media = mean(real, na.rm = TRUE))
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE))
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE))
str(summarised_result)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE))
select(summarised_result,algorithm, iomode, image,nthreads,imsize,real)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE))
select(summarised_result,algorithm, iomode, image,nthreads,imsize,media)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = std(real))
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
source('~/GitProjects/Parallel-Computing/read_results_time.R', echo=TRUE)
source('~/GitProjects/Parallel-Computing/read_results_time.R', echo=TRUE)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 )
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 )
plots[[current_plot]][["filename"]] <- sprintf("BoxplotSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("BoxplotSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("BoxplotSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(ymin = media - sd, ymax =  media + sd), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(ymin = media - desv_pad, ymax =  media + desv_pad), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(x = as.factor(nthreads), ymin = media - desv_pad, ymax =  media + desv_pad), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrSize%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(x = as.factor(nthreads), ymin = media - desv_pad, ymax =  media + desv_pad), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrPorThread_Size%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
plots <- list()
current_plot <- 1
threads <- unique(summarised_result$nthreads)
str(sizes)
dados <- read.csv("~/GitProjects/Parallel-Computing/results_time/results.csv")
library("dplyr")
select(dados, algorithm, iomode, image,nthreads,imsize,real)
grouped_result <- group_by(dados, algorithm,iomode,image,nthreads,imsize)
summarised_result <- summarise(grouped_result,
media = mean(real, na.rm = TRUE),
desv_pad = sd(real))
write.csv(summarised_result, file = "./results_time/summarised_result.csv")
plots <- list()
current_plot <- 1
sizes <- unique(summarised_result$imsize)
str(sizes)
for (s in sizes) {
df <- summarised_result[summarised_result$imsize == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(nthreads), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(x = as.factor(nthreads), ymin = media - desv_pad, ymax =  media + desv_pad), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Número de Threads",
subtitle = sprintf("Tamanho da imagem: %s (Sem I/O)", s)) +
xlab("Número de threads") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrPorThread_Size%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
plots <- list()
current_plot <- 1
threads <- unique(summarised_result$nthreads)
str(threads)
for (s in threads) {
df <- summarised_result[summarised_result$nthreads == s & summarised_result$iomode == "withoutIO",]
plots[[current_plot]] <- list()
plots[[current_plot]][["fig"]] <- ggplot(data = df,
aes(x = as.factor(imsize), y = media, color = algorithm)) +
geom_point(stat = "identity", size = 5 ) +
geom_errorbar(aes(x = as.factor(imsize), ymin = media - desv_pad, ymax =  media + desv_pad), width = 0.5) +
facet_wrap(~image, scales = "free") +
ggtitle("Tempo de Execução x Tamanho da Imagem",
subtitle = sprintf("Número de Threads: %s (Sem I/O)", s)) +
xlab("Tamanho da Imagem") +
ylab("Tempo de execução (s)") +
guides(color = guide_legend(title="Implementação")) +
theme(plot.title = element_text(hjust = 0.5, vjust = 5, size = 20),
plot.subtitle = element_text(hjust = 0.5, size = 14, vjust = 5),
strip.text = element_text(size= 16),
axis.title = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12),
axis.title.y=element_text(vjust=5),
axis.title.x=element_text(vjust=-65),
plot.margin = unit(c(1,1,1,1), "cm"))
plots[[current_plot]][["filename"]] <- sprintf("MediaDesvPadrPorTamanho_Thread%s.pdf", s)
current_plot <- current_plot + 1
}
for (p in plots) {
pdf(paste("./plots/summarised/", p[["filename"]], sep = ""), width = 16, height = 9)
print(p)
dev.off()
}
